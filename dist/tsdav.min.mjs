import e from"debug";import t from"xml-js";import r from"base-64";var a;!function(e){e.CALENDAR_SERVER="http://calendarserver.org/ns/",e.CALDAV_APPLE="http://apple.com/ns/ical/",e.CALDAV="urn:ietf:params:xml:ns:caldav",e.CARDDAV="urn:ietf:params:xml:ns:carddav",e.DAV="DAV:"}(a||(a={}));const s={[a.CALDAV]:"xmlns:c",[a.CARDDAV]:"xmlns:card",[a.CALENDAR_SERVER]:"xmlns:cs",[a.CALDAV_APPLE]:"xmlns:ca",[a.DAV]:"xmlns:d"};var o,n;!function(e){e.CALDAV="c",e.CARDDAV="card",e.CALENDAR_SERVER="cs",e.CALDAV_APPLE="ca",e.DAV="d"}(o||(o={})),function(e){e.VEVENT="VEVENT",e.VTODO="VTODO",e.VJOURNAL="VJOURNAL",e.VFREEBUSY="VFREEBUSY",e.VTIMEZONE="VTIMEZONE",e.VALARM="VALARM"}(n||(n={}));const c=e=>{const t=Number(e);if(!Number.isNaN(t))return t;const r=e.toLowerCase();return"true"===r||"false"!==r&&e},d=(e,t)=>{if(!e&&!t)return!0;if(!e||!t)return!1;const r=e.trim(),a=t.trim();if(Math.abs(r.length-a.length)>1)return!1;const s="/"===r.slice(-1)?r.slice(0,-1):r,o="/"===a.slice(-1)?a.slice(0,-1):a;return e.includes(o)||t.includes(s)},i=(e,t)=>{if(!e&&!t)return!0;if(!e||!t)return!1;const r=e.trim(),a=t.trim(),s="/"===r.slice(-1)?r.slice(0,-1):r,o="/"===a.slice(-1)?a.slice(0,-1):a;return e.includes(o)||t.includes(s)},l=e=>e.reduce(((e,t)=>({...e,[s[t]]:t})),{}),u=e=>Object.entries(e).reduce(((e,[t,r])=>r?{...e,[t]:r}:e),{}),h=(e,t)=>t?{[e]:t}:{},p=(e,t)=>e?t&&0!==t.length?Object.fromEntries(Object.entries(e).filter((([e])=>!t.includes(e)))):e:{};var f=Object.freeze({__proto__:null,cleanupFalsy:u,conditionalParam:h,excludeHeaders:p,getDAVAttribute:l,urlContains:i,urlEquals:d});const v=e("tsdav:request"),y=async e=>{var r;const{url:a,init:s,convertIncoming:o=!0,parseOutgoing:n=!0,fetchOptions:d={}}=e,{headers:i={},body:l,namespace:h,method:p,attributes:f}=s,y=o?t.js2xml({_declaration:{_attributes:{version:"1.0",encoding:"utf-8"}},...l,_attributes:f},{compact:!0,spaces:2,elementNameFn:e=>h&&!/^.+:.+/.test(e)?`${h}:${e}`:e}):l,O=await fetch(a,{headers:{"Content-Type":"text/xml;charset=UTF-8",...u(i)},body:y,method:p,...d}),m=await O.text();if(!O.ok||!(null===(r=O.headers.get("content-type"))||void 0===r?void 0:r.includes("xml"))||!n)return[{href:O.url,ok:O.ok,status:O.status,statusText:O.statusText,raw:m}];const A=t.xml2js(m,{compact:!0,trim:!0,textFn:(e,t)=>{try{const r=t._parent,a=Object.keys(r),s=a[a.length-1],o=r[s];if(o.length>0){o[o.length-1]=c(e)}else r[s]=c(e)}catch(e){v(e.stack)}},elementNameFn:e=>e.replace(/^.+:/,"").replace(/([-_]\w)/g,(e=>e[1].toUpperCase())),attributesFn:e=>{const t={...e};return delete t.xmlns,t},ignoreDeclaration:!0});return(Array.isArray(A.multistatus.response)?A.multistatus.response:[A.multistatus.response]).map((e=>{var t,r;if(!e)return{status:O.status,statusText:O.statusText,ok:O.ok};const a=/^\S+\s(?<status>\d+)\s(?<statusText>.+)$/.exec(e.status);return{raw:A,href:e.href,status:(null==a?void 0:a.groups)?Number.parseInt(null==a?void 0:a.groups.status,10):O.status,statusText:null!==(r=null===(t=null==a?void 0:a.groups)||void 0===t?void 0:t.statusText)&&void 0!==r?r:O.statusText,ok:!e.error,error:e.error,responsedescription:e.responsedescription,props:(Array.isArray(e.propstat)?e.propstat:[e.propstat]).reduce(((e,t)=>({...e,...null==t?void 0:t.prop})),{})}}))},O=async e=>{const{url:t,props:r,depth:s,headers:n,headersToExclude:c,fetchOptions:d={}}=e;return y({url:t,init:{method:"PROPFIND",headers:p(u({depth:s,...n}),c),namespace:o.DAV,body:{propfind:{_attributes:l([a.CALDAV,a.CALDAV_APPLE,a.CALENDAR_SERVER,a.CARDDAV,a.DAV]),prop:r}}},fetchOptions:d})},m=async e=>{const{url:t,data:r,headers:a,headersToExclude:s,fetchOptions:o={}}=e;return fetch(t,{method:"PUT",body:r,headers:p(a,s),...o})},A=async e=>{const{url:t,data:r,etag:a,headers:s,headersToExclude:o,fetchOptions:n={}}=e;return fetch(t,{method:"PUT",body:r,headers:p(u({"If-Match":a,...s}),o),...n})},g=async e=>{const{url:t,headers:r,etag:a,headersToExclude:s,fetchOptions:o={}}=e;return fetch(t,{method:"DELETE",headers:p(u({"If-Match":a,...r}),s),...o})};var D=Object.freeze({__proto__:null,createObject:m,davRequest:y,deleteObject:g,propfind:O,updateObject:A});function C(e,t){const r=e=>t.every((t=>e[t]));return Array.isArray(e)?e.every((e=>r(e))):r(e)}const w=(e,t)=>t.reduce(((t,r)=>e[r]?t:`${t.length?`${t},`:""}${r.toString()}`),""),b=e("tsdav:collection"),V=async e=>{const{url:t,body:r,depth:a,defaultNamespace:s=o.DAV,headers:n,headersToExclude:c,fetchOptions:d={}}=e,i=await y({url:t,init:{method:"REPORT",headers:p(u({depth:a,...n}),c),namespace:s,body:r},fetchOptions:d});return 1!==i.length||i[0].raw?i:[]},$=async e=>{const{url:t,props:r,depth:a,headers:s,headersToExclude:n,fetchOptions:c={}}=e;return y({url:t,init:{method:"MKCOL",headers:p(u({depth:a,...s}),n),namespace:o.DAV,body:r?{mkcol:{set:{prop:r}}}:void 0},fetchOptions:c})},E=async e=>{var t,r,a,s,n;const{collection:c,headers:d,headersToExclude:i,fetchOptions:l={}}=e;return null!==(n=null===(s=null===(a=null===(r=null===(t=(await O({url:c.url,props:{[`${o.DAV}:supported-report-set`]:{}},depth:"0",headers:p(d,i),fetchOptions:l}))[0])||void 0===t?void 0:t.props)||void 0===r?void 0:r.supportedReportSet)||void 0===a?void 0:a.supportedReport)||void 0===s?void 0:s.map((e=>Object.keys(e.report)[0])))&&void 0!==n?n:[]},T=async e=>{var t,r,a;const{collection:s,headers:n,headersToExclude:c,fetchOptions:d={}}=e,l=(await O({url:s.url,props:{[`${o.CALENDAR_SERVER}:getctag`]:{}},depth:"0",headers:p(n,c),fetchOptions:d})).filter((e=>i(s.url,e.href)))[0];if(!l)throw new Error("Collection does not exist on server");return{isDirty:`${s.ctag}`!=`${null===(t=l.props)||void 0===t?void 0:t.getctag}`,newCtag:null===(a=null===(r=l.props)||void 0===r?void 0:r.getctag)||void 0===a?void 0:a.toString()}},k=e=>{const{url:t,props:r,headers:s,syncLevel:n,syncToken:c,headersToExclude:d,fetchOptions:i}=e;return y({url:t,init:{method:"REPORT",namespace:o.DAV,headers:p({...s},d),body:{"sync-collection":{_attributes:l([a.CALDAV,a.CARDDAV,a.DAV]),"sync-level":n,"sync-token":c,[`${o.DAV}:prop`]:r}}},fetchOptions:i})},_=async e=>{var t,r,a,s,n,c,d,l,u,h,f;const{collection:v,method:y,headers:O,headersToExclude:m,account:A,detailedResult:g,fetchOptions:D={}}=e,V=["accountType","homeUrl"];if(!A||!C(A,V)){if(!A)throw new Error("no account for smartCollectionSync");throw new Error(`account must have ${w(A,V)} before smartCollectionSync`)}const $=null!=y?y:(null===(t=v.reports)||void 0===t?void 0:t.includes("syncCollection"))?"webdav":"basic";if(b(`smart collection sync with type ${A.accountType} and method ${$}`),"webdav"===$){const e=await k({url:v.url,props:{[`${o.DAV}:getetag`]:{},[`${"caldav"===A.accountType?o.CALDAV:o.CARDDAV}:${"caldav"===A.accountType?"calendar-data":"address-data"}`]:{},[`${o.DAV}:displayname`]:{}},syncLevel:1,syncToken:v.syncToken,headers:p(O,m),fetchOptions:D}),t=e.filter((e=>{var t;const r="caldav"===A.accountType?".ics":".vcf";return(null===(t=e.href)||void 0===t?void 0:t.slice(-4))===r})),u=t.filter((e=>404!==e.status)).map((e=>e.href)),h=t.filter((e=>404===e.status)).map((e=>e.href)),f=(u.length&&null!==(a=await(null===(r=null==v?void 0:v.objectMultiGet)||void 0===r?void 0:r.call(v,{url:v.url,props:{[`${o.DAV}:getetag`]:{},[`${"caldav"===A.accountType?o.CALDAV:o.CARDDAV}:${"caldav"===A.accountType?"calendar-data":"address-data"}`]:{}},objectUrls:u,depth:"1",headers:p(O,m),fetchOptions:D})))&&void 0!==a?a:[]).map((e=>{var t,r,a,s,o,n,c,d,i,l;return{url:null!==(t=e.href)&&void 0!==t?t:"",etag:null===(r=e.props)||void 0===r?void 0:r.getetag,data:"caldav"===(null==A?void 0:A.accountType)?null!==(o=null===(s=null===(a=e.props)||void 0===a?void 0:a.calendarData)||void 0===s?void 0:s._cdata)&&void 0!==o?o:null===(n=e.props)||void 0===n?void 0:n.calendarData:null!==(i=null===(d=null===(c=e.props)||void 0===c?void 0:c.addressData)||void 0===d?void 0:d._cdata)&&void 0!==i?i:null===(l=e.props)||void 0===l?void 0:l.addressData}})),y=null!==(s=v.objects)&&void 0!==s?s:[],C=f.filter((e=>y.every((t=>!i(t.url,e.url))))),w=y.reduce(((e,t)=>{const r=f.find((e=>i(e.url,t.url)));return r&&r.etag&&r.etag!==t.etag?[...e,r]:e}),[]),b=h.map((e=>({url:e,etag:""}))),V=y.filter((e=>f.some((t=>i(e.url,t.url)&&t.etag===e.etag))));return{...v,objects:g?{created:C,updated:w,deleted:b}:[...V,...C,...w],syncToken:null!==(l=null===(d=null===(c=null===(n=e[0])||void 0===n?void 0:n.raw)||void 0===c?void 0:c.multistatus)||void 0===d?void 0:d.syncToken)&&void 0!==l?l:v.syncToken}}if("basic"===$){const{isDirty:e,newCtag:t}=await T({collection:v,headers:p(O,m),fetchOptions:D}),r=null!==(u=v.objects)&&void 0!==u?u:[],a=null!==(f=await(null===(h=v.fetchObjects)||void 0===h?void 0:h.call(v,{collection:v,headers:p(O,m),fetchOptions:D})))&&void 0!==f?f:[],s=a.filter((e=>r.every((t=>!i(t.url,e.url))))),o=r.reduce(((e,t)=>{const r=a.find((e=>i(e.url,t.url)));return r&&r.etag&&r.etag!==t.etag?[...e,r]:e}),[]),n=r.filter((e=>a.every((t=>!i(t.url,e.url))))),c=r.filter((e=>a.some((t=>i(e.url,t.url)&&t.etag===e.etag))));if(e)return{...v,objects:g?{created:s,updated:o,deleted:n}:[...c,...s,...o],ctag:t}}return g?{...v,objects:{created:[],updated:[],deleted:[]}}:v};var R=Object.freeze({__proto__:null,collectionQuery:V,isCollectionDirty:T,makeCollection:$,smartCollectionSync:_,supportedReportSet:E,syncCollection:k});const U=e("tsdav:addressBook"),L=async e=>{const{url:t,props:r,filters:s,depth:n,headers:c,headersToExclude:d,fetchOptions:i={}}=e;return V({url:t,body:{"addressbook-query":{_attributes:l([a.CARDDAV,a.DAV]),[`${o.DAV}:prop`]:r,filter:null!=s?s:{"prop-filter":{_attributes:{name:"FN"}}}}},defaultNamespace:o.CARDDAV,depth:n,headers:p(c,d),fetchOptions:i})},j=async e=>{const{url:t,props:r,objectUrls:s,depth:n,headers:c,headersToExclude:d,fetchOptions:i={}}=e;return V({url:t,body:{"addressbook-multiget":{_attributes:l([a.DAV,a.CARDDAV]),[`${o.DAV}:prop`]:r,[`${o.DAV}:href`]:s}},defaultNamespace:o.CARDDAV,depth:n,headers:p(c,d),fetchOptions:i})},x=async e=>{const{account:t,headers:r,props:a,headersToExclude:s,fetchOptions:n={}}=null!=e?e:{},c=["homeUrl","rootUrl"];if(!t||!C(t,c)){if(!t)throw new Error("no account for fetchAddressBooks");throw new Error(`account must have ${w(t,c)} before fetchAddressBooks`)}const d=await O({url:t.homeUrl,props:null!=a?a:{[`${o.DAV}:displayname`]:{},[`${o.CALENDAR_SERVER}:getctag`]:{},[`${o.DAV}:resourcetype`]:{},[`${o.DAV}:sync-token`]:{}},depth:"1",headers:p(r,s),fetchOptions:n});return Promise.all(d.filter((e=>{var t,r;return Object.keys(null!==(r=null===(t=e.props)||void 0===t?void 0:t.resourcetype)&&void 0!==r?r:{}).includes("addressbook")})).map((e=>{var r,a,s,o,n,c,d,i,l;const u=null!==(s=null===(a=null===(r=e.props)||void 0===r?void 0:r.displayname)||void 0===a?void 0:a._cdata)&&void 0!==s?s:null===(o=e.props)||void 0===o?void 0:o.displayname;return U(`Found address book named ${"string"==typeof u?u:""},\n             props: ${JSON.stringify(e.props)}`),{url:new URL(null!==(n=e.href)&&void 0!==n?n:"",null!==(c=t.rootUrl)&&void 0!==c?c:"").href,ctag:null===(d=e.props)||void 0===d?void 0:d.getctag,displayName:"string"==typeof u?u:"",resourcetype:Object.keys(null===(i=e.props)||void 0===i?void 0:i.resourcetype),syncToken:null===(l=e.props)||void 0===l?void 0:l.syncToken}})).map((async e=>({...e,reports:await E({collection:e,headers:p(r,s),fetchOptions:n})}))))},S=async e=>{const{addressBook:t,headers:r,objectUrls:a,headersToExclude:s,urlFilter:n=e=>e,useMultiGet:c=!0,fetchOptions:d={}}=e;U(`Fetching vcards from ${null==t?void 0:t.url}`);const i=["url"];if(!t||!C(t,i)){if(!t)throw new Error("cannot fetchVCards for undefined addressBook");throw new Error(`addressBook must have ${w(t,i)} before fetchVCards`)}const l=(null!=a?a:(await L({url:t.url,props:{[`${o.DAV}:getetag`]:{}},depth:"1",headers:p(r,s),fetchOptions:d})).map((e=>{var t;return e.ok&&null!==(t=e.href)&&void 0!==t?t:""}))).map((e=>e.startsWith("http")||!e?e:new URL(e,t.url).href)).filter(n).map((e=>new URL(e).pathname));let u=[];return l.length>0&&(u=c?await j({url:t.url,props:{[`${o.DAV}:getetag`]:{},[`${o.CARDDAV}:address-data`]:{}},objectUrls:l,depth:"1",headers:p(r,s),fetchOptions:d}):await L({url:t.url,props:{[`${o.DAV}:getetag`]:{},[`${o.CARDDAV}:address-data`]:{}},depth:"1",headers:p(r,s),fetchOptions:d})),u.map((e=>{var r,a,s,o,n,c;return{url:new URL(null!==(r=e.href)&&void 0!==r?r:"",t.url).href,etag:null===(a=e.props)||void 0===a?void 0:a.getetag,data:null!==(n=null===(o=null===(s=e.props)||void 0===s?void 0:s.addressData)||void 0===o?void 0:o._cdata)&&void 0!==n?n:null===(c=e.props)||void 0===c?void 0:c.addressData}}))},N=async e=>{const{addressBook:t,vCardString:r,filename:a,headers:s,headersToExclude:o,fetchOptions:n={}}=e;return m({url:new URL(a,t.url).href,data:r,headers:p({"content-type":"text/vcard; charset=utf-8","If-None-Match":"*",...s},o),fetchOptions:n})},H=async e=>{const{vCard:t,headers:r,headersToExclude:a,fetchOptions:s={}}=e;return A({url:t.url,data:t.data,etag:t.etag,headers:p({"content-type":"text/vcard; charset=utf-8",...r},a),fetchOptions:s})},P=async e=>{const{vCard:t,headers:r,headersToExclude:a,fetchOptions:s={}}=e;return g({url:t.url,etag:t.etag,headers:p(r,a),fetchOptions:s})};var B=Object.freeze({__proto__:null,addressBookMultiGet:j,addressBookQuery:L,createVCard:N,deleteVCard:P,fetchAddressBooks:x,fetchVCards:S,updateVCard:H});const I=e("tsdav:calendar"),F=async e=>{const{url:t,props:r,filters:s,timezone:n,depth:c,headers:d,headersToExclude:i,fetchOptions:h={}}=e;return V({url:t,body:{"calendar-query":u({_attributes:l([a.CALDAV,a.CALENDAR_SERVER,a.CALDAV_APPLE,a.DAV]),[`${o.DAV}:prop`]:r,filter:s,timezone:n})},defaultNamespace:o.CALDAV,depth:c,headers:p(d,i),fetchOptions:h})},M=async e=>{const{url:t,props:r,objectUrls:s,filters:n,timezone:c,depth:d,headers:i,headersToExclude:u,fetchOptions:f={}}=e;return V({url:t,body:{"calendar-multiget":{_attributes:l([a.DAV,a.CALDAV]),[`${o.DAV}:prop`]:r,[`${o.DAV}:href`]:s,...h("filter",n),timezone:c}},defaultNamespace:o.CALDAV,depth:d,headers:p(i,u),fetchOptions:f})},z=async e=>{const{url:t,props:r,depth:s,headers:n,headersToExclude:c,fetchOptions:d={}}=e;return y({url:t,init:{method:"MKCALENDAR",headers:p(u({depth:s,...n}),c),namespace:o.DAV,body:{[`${o.CALDAV}:mkcalendar`]:{_attributes:l([a.DAV,a.CALDAV,a.CALDAV_APPLE]),set:{prop:r}}}},fetchOptions:d})},Z=async e=>{const{headers:t,account:r,props:a,projectedProps:s,headersToExclude:c,fetchOptions:d={}}=null!=e?e:{},i=["homeUrl","rootUrl"];if(!r||!C(r,i)){if(!r)throw new Error("no account for fetchCalendars");throw new Error(`account must have ${w(r,i)} before fetchCalendars`)}const l=await O({url:r.homeUrl,props:null!=a?a:{[`${o.CALDAV}:calendar-description`]:{},[`${o.CALDAV}:calendar-timezone`]:{},[`${o.DAV}:displayname`]:{},[`${o.CALDAV_APPLE}:calendar-color`]:{},[`${o.CALENDAR_SERVER}:getctag`]:{},[`${o.DAV}:resourcetype`]:{},[`${o.CALDAV}:supported-calendar-component-set`]:{},[`${o.DAV}:sync-token`]:{}},depth:"1",headers:p(t,c),fetchOptions:d});return Promise.all(l.filter((e=>{var t,r;return Object.keys(null!==(r=null===(t=e.props)||void 0===t?void 0:t.resourcetype)&&void 0!==r?r:{}).includes("calendar")})).filter((e=>{var t,r,a,s;return(Array.isArray(null===(t=e.props)||void 0===t?void 0:t.supportedCalendarComponentSet.comp)?null===(r=e.props)||void 0===r?void 0:r.supportedCalendarComponentSet.comp.map((e=>e._attributes.name)):[null===(s=null===(a=e.props)||void 0===a?void 0:a.supportedCalendarComponentSet.comp)||void 0===s?void 0:s._attributes.name]).some((e=>Object.values(n).includes(e)))})).map((e=>{var t,a,o,n,c,d,i,l,u,p,f,v,y,O,m,A;const g=null===(t=e.props)||void 0===t?void 0:t.calendarDescription,D=null===(a=e.props)||void 0===a?void 0:a.calendarTimezone;return{description:"string"==typeof g?g:"",timezone:"string"==typeof D?D:"",url:new URL(null!==(o=e.href)&&void 0!==o?o:"",null!==(n=r.rootUrl)&&void 0!==n?n:"").href,ctag:null===(c=e.props)||void 0===c?void 0:c.getctag,calendarColor:null===(d=e.props)||void 0===d?void 0:d.calendarColor,displayName:null!==(l=null===(i=e.props)||void 0===i?void 0:i.displayname._cdata)&&void 0!==l?l:null===(u=e.props)||void 0===u?void 0:u.displayname,components:Array.isArray(null===(p=e.props)||void 0===p?void 0:p.supportedCalendarComponentSet.comp)?null===(f=e.props)||void 0===f?void 0:f.supportedCalendarComponentSet.comp.map((e=>e._attributes.name)):[null===(y=null===(v=e.props)||void 0===v?void 0:v.supportedCalendarComponentSet.comp)||void 0===y?void 0:y._attributes.name],resourcetype:Object.keys(null===(O=e.props)||void 0===O?void 0:O.resourcetype),syncToken:null===(m=e.props)||void 0===m?void 0:m.syncToken,...h("projectedProps",Object.fromEntries(Object.entries(null!==(A=e.props)&&void 0!==A?A:{}).filter((([e])=>null==s?void 0:s[e]))))}})).map((async e=>({...e,reports:await E({collection:e,headers:p(t,c),fetchOptions:d})}))))},G=async e=>{const{calendar:t,objectUrls:r,filters:a,timeRange:s,headers:n,expand:c,urlFilter:d=e=>Boolean(null==e?void 0:e.includes(".ics")),useMultiGet:i=!0,headersToExclude:l,fetchOptions:u={}}=e;if(s){const e=/^\d{4}(-\d\d(-\d\d(T\d\d:\d\d(:\d\d)?(\.\d+)?(([+-]\d\d:\d\d)|Z)?)?)?)?$/i,t=/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(\.\d+)?(([+-]\d\d:\d\d)|Z)?$/i;if(!(e.test(s.start)&&e.test(s.end)||t.test(s.start)&&t.test(s.end)))throw new Error("invalid timeRange format, not in ISO8601")}I(`Fetching calendar objects from ${null==t?void 0:t.url}`);const h=["url"];if(!t||!C(t,h)){if(!t)throw new Error("cannot fetchCalendarObjects for undefined calendar");throw new Error(`calendar must have ${w(t,h)} before fetchCalendarObjects`)}const f=null!=a?a:[{"comp-filter":{_attributes:{name:"VCALENDAR"},"comp-filter":{_attributes:{name:"VEVENT"},...s?{"time-range":{_attributes:{start:`${new Date(s.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(s.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}}:{}}}}],v=(null!=r?r:(await F({url:t.url,props:{[`${o.DAV}:getetag`]:{...c&&s?{[`${o.CALDAV}:expand`]:{_attributes:{start:`${new Date(s.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(s.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}}:{}}},filters:f,depth:"1",headers:p(n,l),fetchOptions:u})).map((e=>{var t;return null!==(t=e.href)&&void 0!==t?t:""}))).map((e=>e.startsWith("http")||!e?e:new URL(e,t.url).href)).filter(d).map((e=>new URL(e).pathname));let y=[];return v.length>0&&(y=!i||c?await F({url:t.url,props:{[`${o.DAV}:getetag`]:{},[`${o.CALDAV}:calendar-data`]:{...c&&s?{[`${o.CALDAV}:expand`]:{_attributes:{start:`${new Date(s.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(s.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}}:{}}},filters:f,depth:"1",headers:p(n,l),fetchOptions:u}):await M({url:t.url,props:{[`${o.DAV}:getetag`]:{},[`${o.CALDAV}:calendar-data`]:{...c&&s?{[`${o.CALDAV}:expand`]:{_attributes:{start:`${new Date(s.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(s.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}}:{}}},objectUrls:v,depth:"1",headers:p(n,l),fetchOptions:u})),y.map((e=>{var r,a,s,o,n,c;return{url:new URL(null!==(r=e.href)&&void 0!==r?r:"",t.url).href,etag:`${null===(a=e.props)||void 0===a?void 0:a.getetag}`,data:null!==(n=null===(o=null===(s=e.props)||void 0===s?void 0:s.calendarData)||void 0===o?void 0:o._cdata)&&void 0!==n?n:null===(c=e.props)||void 0===c?void 0:c.calendarData}}))},Q=async e=>{const{calendar:t,iCalString:r,filename:a,headers:s,headersToExclude:o,fetchOptions:n={}}=e;return m({url:new URL(a,t.url).href,data:r,headers:p({"content-type":"text/calendar; charset=utf-8","If-None-Match":"*",...s},o),fetchOptions:n})},q=async e=>{const{calendarObject:t,headers:r,headersToExclude:a,fetchOptions:s={}}=e;return A({url:t.url,data:t.data,etag:t.etag,headers:p({"content-type":"text/calendar; charset=utf-8",...r},a),fetchOptions:s})},J=async e=>{const{calendarObject:t,headers:r,headersToExclude:a,fetchOptions:s={}}=e;return g({url:t.url,etag:t.etag,headers:p(r,a),fetchOptions:s})},K=async e=>{var t;const{oldCalendars:r,account:a,detailedResult:s,headers:o,headersToExclude:n,fetchOptions:c={}}=e;if(!a)throw new Error("Must have account before syncCalendars");const d=null!==(t=null!=r?r:a.calendars)&&void 0!==t?t:[],l=await Z({account:a,headers:p(o,n),fetchOptions:c}),u=l.filter((e=>d.every((t=>!i(t.url,e.url)))));I(`new calendars: ${u.map((e=>e.displayName))}`);const h=d.reduce(((e,t)=>{const r=l.find((e=>i(e.url,t.url)));return r&&(r.syncToken&&`${r.syncToken}`!=`${t.syncToken}`||r.ctag&&`${r.ctag}`!=`${t.ctag}`)?[...e,r]:e}),[]);I(`updated calendars: ${h.map((e=>e.displayName))}`);const f=await Promise.all(h.map((async e=>await _({collection:{...e,objectMultiGet:M},method:"webdav",headers:p(o,n),account:a,fetchOptions:c})))),v=d.filter((e=>l.every((t=>!i(t.url,e.url)))));I(`deleted calendars: ${v.map((e=>e.displayName))}`);const y=d.filter((e=>l.some((t=>i(t.url,e.url)&&(t.syncToken&&`${t.syncToken}`!=`${e.syncToken}`||t.ctag&&`${t.ctag}`!=`${e.ctag}`)))));return s?{created:u,updated:h,deleted:v}:[...y,...u,...f]},W=async e=>{const{url:t,timeRange:r,depth:s,headers:n,headersToExclude:c,fetchOptions:d={}}=e;if(!r)throw new Error("timeRange is required");{const e=/^\d{4}(-\d\d(-\d\d(T\d\d:\d\d(:\d\d)?(\.\d+)?(([+-]\d\d:\d\d)|Z)?)?)?)?$/i,t=/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(\.\d+)?(([+-]\d\d:\d\d)|Z)?$/i;if(!(e.test(r.start)&&e.test(r.end)||t.test(r.start)&&t.test(r.end)))throw new Error("invalid timeRange format, not in ISO8601")}return(await V({url:t,body:{"free-busy-query":u({_attributes:l([a.CALDAV]),[`${o.CALDAV}:time-range`]:{_attributes:{start:`${new Date(r.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(r.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}})},defaultNamespace:o.CALDAV,depth:s,headers:p(n,c),fetchOptions:d}))[0]};var Y=Object.freeze({__proto__:null,calendarMultiGet:M,calendarQuery:F,createCalendarObject:Q,deleteCalendarObject:J,fetchCalendarObjects:G,fetchCalendars:Z,freeBusyQuery:W,makeCalendar:z,syncCalendars:K,updateCalendarObject:q});const X=e("tsdav:account"),ee=async e=>{var t,r;X("Service discovery...");const{account:a,headers:s,headersToExclude:o,fetchOptions:n={}}=e,c=new URL(a.serverUrl),d=new URL(`/.well-known/${a.accountType}`,c);d.protocol=null!==(t=c.protocol)&&void 0!==t?t:"http";try{const e=await fetch(d.href,{headers:p(s,o),method:"PROPFIND",redirect:"manual",...n});if(e.status>=300&&e.status<400){const t=e.headers.get("Location");if("string"==typeof t&&t.length){X(`Service discovery redirected to ${t}`);const e=new URL(t,c);return e.hostname===d.hostname&&d.port&&!e.port&&(e.port=d.port),e.protocol=null!==(r=c.protocol)&&void 0!==r?r:"http",e.href}}}catch(e){X(`Service discovery failed: ${e.stack}`)}return c.href},te=async e=>{var t,r,a,s,n;const{account:c,headers:d,headersToExclude:i,fetchOptions:l={}}=e,u=["rootUrl"];if(!C(c,u))throw new Error(`account must have ${w(c,u)} before fetchPrincipalUrl`);X(`Fetching principal url from path ${c.rootUrl}`);const[h]=await O({url:c.rootUrl,props:{[`${o.DAV}:current-user-principal`]:{}},depth:"0",headers:p(d,i),fetchOptions:l});if(!h.ok&&(X(`Fetch principal url failed: ${h.statusText}`),401===h.status))throw new Error("Invalid credentials");return X(`Fetched principal url ${null===(r=null===(t=h.props)||void 0===t?void 0:t.currentUserPrincipal)||void 0===r?void 0:r.href}`),new URL(null!==(n=null===(s=null===(a=h.props)||void 0===a?void 0:a.currentUserPrincipal)||void 0===s?void 0:s.href)&&void 0!==n?n:"",c.rootUrl).href},re=async e=>{var t,r;const{account:a,headers:s,headersToExclude:n,fetchOptions:c={}}=e,d=["principalUrl","rootUrl"];if(!C(a,d))throw new Error(`account must have ${w(a,d)} before fetchHomeUrl`);X(`Fetch home url from ${a.principalUrl}`);const l=(await O({url:a.principalUrl,props:"caldav"===a.accountType?{[`${o.CALDAV}:calendar-home-set`]:{}}:{[`${o.CARDDAV}:addressbook-home-set`]:{}},depth:"0",headers:p(s,n),fetchOptions:c})).find((e=>i(a.principalUrl,e.href)));if(!l||!l.ok)throw new Error("cannot find homeUrl");const u=new URL("caldav"===a.accountType?null===(t=null==l?void 0:l.props)||void 0===t?void 0:t.calendarHomeSet.href:null===(r=null==l?void 0:l.props)||void 0===r?void 0:r.addressbookHomeSet.href,a.rootUrl).href;return X(`Fetched home url ${u}`),u},ae=async e=>{const{account:t,headers:r,loadCollections:a=!1,loadObjects:s=!1,headersToExclude:o,fetchOptions:n={}}=e,c={...t};return c.rootUrl=await ee({account:t,headers:p(r,o),fetchOptions:n}),c.principalUrl=await te({account:c,headers:p(r,o),fetchOptions:n}),c.homeUrl=await re({account:c,headers:p(r,o),fetchOptions:n}),(a||s)&&("caldav"===t.accountType?c.calendars=await Z({headers:p(r,o),account:c,fetchOptions:n}):"carddav"===t.accountType&&(c.addressBooks=await x({headers:p(r,o),account:c,fetchOptions:n}))),s&&("caldav"===t.accountType&&c.calendars?c.calendars=await Promise.all(c.calendars.map((async e=>({...e,objects:await G({calendar:e,headers:p(r,o),fetchOptions:n})})))):"carddav"===t.accountType&&c.addressBooks&&(c.addressBooks=await Promise.all(c.addressBooks.map((async e=>({...e,objects:await S({addressBook:e,headers:p(r,o),fetchOptions:n})})))))),c};var se=Object.freeze({__proto__:null,createAccount:ae,fetchHomeUrl:re,fetchPrincipalUrl:te,serviceDiscovery:ee});const oe=e("tsdav:authHelper"),ne=(e,t)=>(...r)=>e({...t,...r[0]}),ce=e=>(oe(`Basic auth token generated: ${r.encode(`${e.username}:${e.password}`)}`),{authorization:`Basic ${r.encode(`${e.username}:${e.password}`)}`}),de=async(e,t)=>{const r=["authorizationCode","redirectUrl","clientId","clientSecret","tokenUrl"];if(!C(e,r))throw new Error(`Oauth credentials missing: ${w(e,r)}`);const a=new URLSearchParams({grant_type:"authorization_code",code:e.authorizationCode,redirect_uri:e.redirectUrl,client_id:e.clientId,client_secret:e.clientSecret});oe(e.tokenUrl),oe(a.toString());const s=await fetch(e.tokenUrl,{method:"POST",body:a.toString(),headers:{"content-length":`${a.toString().length}`,"content-type":"application/x-www-form-urlencoded"},...null!=t?t:{}});if(s.ok){return await s.json()}return oe(`Fetch Oauth tokens failed: ${await s.text()}`),{}},ie=async(e,t)=>{const r=["refreshToken","clientId","clientSecret","tokenUrl"];if(!C(e,r))throw new Error(`Oauth credentials missing: ${w(e,r)}`);const a=new URLSearchParams({client_id:e.clientId,client_secret:e.clientSecret,refresh_token:e.refreshToken,grant_type:"refresh_token"}),s=await fetch(e.tokenUrl,{method:"POST",body:a.toString(),headers:{"Content-Type":"application/x-www-form-urlencoded"},...null!=t?t:{}});if(s.ok){return await s.json()}return oe(`Refresh access token failed: ${await s.text()}`),{}},le=async(e,t)=>{var r;oe("Fetching oauth headers");let a={};return e.refreshToken?(e.refreshToken&&!e.accessToken||Date.now()>(null!==(r=e.expiration)&&void 0!==r?r:0))&&(a=await ie(e,t)):a=await de(e,t),oe(`Oauth tokens fetched: ${a.access_token}`),{tokens:a,headers:{authorization:`Bearer ${a.access_token}`}}};var ue=Object.freeze({__proto__:null,defaultParam:ne,fetchOauthTokens:de,getBasicAuthHeaders:ce,getOauthHeaders:le,refreshAccessToken:ie});const he=async e=>{var t;const{serverUrl:r,credentials:a,authMethod:s,defaultAccountType:o,authFunction:n}=e;let c={};switch(s){case"Basic":c=ce(a);break;case"Oauth":c=(await le(a)).headers;break;case"Digest":c={Authorization:`Digest ${a.digestString}`};break;case"Custom":c=null!==(t=await(null==n?void 0:n(a)))&&void 0!==t?t:{};break;default:throw new Error("Invalid auth method")}const d=o?await ae({account:{serverUrl:r,credentials:a,accountType:o},headers:c}):void 0,i=ne(m,{url:r,headers:c}),l=ne(A,{headers:c,url:r}),u=ne(g,{headers:c,url:r}),h=ne(O,{headers:c}),p=ne(V,{headers:c}),f=ne($,{headers:c}),v=ne(k,{headers:c}),D=ne(E,{headers:c}),C=ne(T,{headers:c}),w=ne(_,{headers:c,account:d}),b=ne(F,{headers:c}),R=ne(M,{headers:c}),U=ne(z,{headers:c}),B=ne(Z,{headers:c,account:d}),I=ne(G,{headers:c}),W=ne(Q,{headers:c}),Y=ne(q,{headers:c}),X=ne(J,{headers:c}),ee=ne(K,{account:d,headers:c}),te=ne(L,{headers:c}),re=ne(j,{headers:c});return{davRequest:async e=>{const{init:t,...r}=e,{headers:a,...s}=t;return y({...r,init:{...s,headers:{...c,...a}}})},propfind:h,createAccount:async e=>{const{account:t,headers:s,loadCollections:o,loadObjects:n}=e;return ae({account:{serverUrl:r,credentials:a,...t},headers:{...c,...s},loadCollections:o,loadObjects:n})},createObject:i,updateObject:l,deleteObject:u,calendarQuery:b,addressBookQuery:te,collectionQuery:p,makeCollection:f,calendarMultiGet:R,makeCalendar:U,syncCollection:v,supportedReportSet:D,isCollectionDirty:C,smartCollectionSync:w,fetchCalendars:B,fetchCalendarObjects:I,createCalendarObject:W,updateCalendarObject:Y,deleteCalendarObject:X,syncCalendars:ee,fetchAddressBooks:ne(x,{account:d,headers:c}),addressBookMultiGet:re,fetchVCards:ne(S,{headers:c}),createVCard:ne(N,{headers:c}),updateVCard:ne(H,{headers:c}),deleteVCard:ne(P,{headers:c})}};class pe{constructor(e){var t,r,a;this.serverUrl=e.serverUrl,this.credentials=e.credentials,this.authMethod=null!==(t=e.authMethod)&&void 0!==t?t:"Basic",this.accountType=null!==(r=e.defaultAccountType)&&void 0!==r?r:"caldav",this.authFunction=e.authFunction,this.fetchOptions=null!==(a=e.fetchOptions)&&void 0!==a?a:{}}async login(){var e;switch(this.authMethod){case"Basic":this.authHeaders=ce(this.credentials);break;case"Oauth":this.authHeaders=(await le(this.credentials,this.fetchOptions)).headers;break;case"Digest":this.authHeaders={Authorization:`Digest ${this.credentials.digestString}`};break;case"Custom":this.authHeaders=await(null===(e=this.authFunction)||void 0===e?void 0:e.call(this,this.credentials));break;default:throw new Error("Invalid auth method")}this.account=this.accountType?await ae({account:{serverUrl:this.serverUrl,credentials:this.credentials,accountType:this.accountType},headers:this.authHeaders,fetchOptions:this.fetchOptions}):void 0}async davRequest(e){const{init:t,...r}=e,{headers:a,...s}=t;return y({...r,init:{...s,headers:{...this.authHeaders,...a}},fetchOptions:this.fetchOptions})}async createObject(...e){return ne(m,{url:this.serverUrl,headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async updateObject(...e){return ne(A,{url:this.serverUrl,headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async deleteObject(...e){return ne(g,{url:this.serverUrl,headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async propfind(...e){return ne(O,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async createAccount(e){const{account:t,headers:r,loadCollections:a,loadObjects:s,fetchOptions:o}=e;return ae({account:{serverUrl:this.serverUrl,credentials:this.credentials,...t},headers:{...this.authHeaders,...r},loadCollections:a,loadObjects:s,fetchOptions:null!=o?o:this.fetchOptions})}async collectionQuery(...e){return ne(V,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async makeCollection(...e){return ne($,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async syncCollection(...e){return ne(k,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async supportedReportSet(...e){return ne(E,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async isCollectionDirty(...e){return ne(T,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async smartCollectionSync(...e){return ne(_,{headers:this.authHeaders,fetchOptions:this.fetchOptions,account:this.account})(e[0])}async calendarQuery(...e){return ne(F,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async makeCalendar(...e){return ne(z,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async calendarMultiGet(...e){return ne(M,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async fetchCalendars(...e){return ne(Z,{headers:this.authHeaders,account:this.account,fetchOptions:this.fetchOptions})(null==e?void 0:e[0])}async fetchCalendarObjects(...e){return ne(G,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async createCalendarObject(...e){return ne(Q,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async updateCalendarObject(...e){return ne(q,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async deleteCalendarObject(...e){return ne(J,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async syncCalendars(...e){return ne(K,{headers:this.authHeaders,account:this.account,fetchOptions:this.fetchOptions})(e[0])}async addressBookQuery(...e){return ne(L,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async addressBookMultiGet(...e){return ne(j,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async fetchAddressBooks(...e){return ne(x,{headers:this.authHeaders,account:this.account,fetchOptions:this.fetchOptions})(null==e?void 0:e[0])}async fetchVCards(...e){return ne(S,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async createVCard(...e){return ne(N,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async updateVCard(...e){return ne(H,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async deleteVCard(...e){return ne(P,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}}var fe={DAVNamespace:a,DAVNamespaceShort:o,DAVAttributeMap:s,...Object.freeze({__proto__:null,DAVClient:pe,createDAVClient:he}),...D,...R,...se,...B,...Y,...ue,...f};export{s as DAVAttributeMap,pe as DAVClient,a as DAVNamespace,o as DAVNamespaceShort,L as addressBookQuery,M as calendarMultiGet,F as calendarQuery,u as cleanupFalsy,V as collectionQuery,ae as createAccount,Q as createCalendarObject,he as createDAVClient,m as createObject,N as createVCard,y as davRequest,fe as default,J as deleteCalendarObject,g as deleteObject,P as deleteVCard,x as fetchAddressBooks,G as fetchCalendarObjects,Z as fetchCalendars,de as fetchOauthTokens,S as fetchVCards,W as freeBusyQuery,ce as getBasicAuthHeaders,l as getDAVAttribute,le as getOauthHeaders,T as isCollectionDirty,z as makeCalendar,O as propfind,ie as refreshAccessToken,_ as smartCollectionSync,E as supportedReportSet,K as syncCalendars,k as syncCollection,q as updateCalendarObject,A as updateObject,H as updateVCard,i as urlContains,d as urlEquals};
